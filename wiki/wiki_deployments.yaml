apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: my-release
    meta.helm.sh/release-namespace: default
  creationTimestamp: "2022-12-23T17:34:23Z"
  generation: 1
  labels:
    app.kubernetes.io/instance: my-release
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: wiki
    app.kubernetes.io/version: latest
    helm.sh/chart: wiki-2.2.18
  name: my-release-wiki
  namespace: default
  resourceVersion: "31731"
  uid: f1446618-4ffb-4392-82c6-bc607f87433a
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: my-release
      app.kubernetes.io/name: wiki
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: my-release
        app.kubernetes.io/name: wiki
    spec:
      containers:
      - env:
        - name: DB_TYPE
          value: postgres
        - name: DB_HOST
          value: my-release-postgresql
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: wiki
        - name: DB_USER
          value: postgres
        - name: DB_SSL
          value: "false"
        - name: DB_SSL_CA
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: my-release-postgresql
              name: my-release-postgresql
        - name: HA_ACTIVE
          value: "false"
        image: requarks/wiki:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: wiki
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        securityContext: {}
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: http
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: my-release-wiki
      serviceAccountName: my-release-wiki
      terminationGracePeriodSeconds: 30
status:
  conditions:
  - lastTransitionTime: "2022-12-23T17:34:23Z"
    lastUpdateTime: "2022-12-23T17:34:23Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2022-12-23T17:44:24Z"
    lastUpdateTime: "2022-12-23T17:44:24Z"
    message: ReplicaSet "my-release-wiki-5ddcd67986" has timed out progressing.
    reason: ProgressDeadlineExceeded
    status: "False"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
